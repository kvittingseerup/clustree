% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarise_metadata.R
\name{summarise_metadata}
\alias{summarise_metadata}
\alias{summarize_metadata}
\alias{summarise_metadata.clustree_graph}
\title{Summarise clustering tree metadata}
\usage{
summarise_metadata(.graph, ...)

summarize_metadata(.graph, ...)

\method{summarise_metadata}{clustree_graph}(.graph, ...)
}
\arguments{
\item{.graph}{A \code{clustree_graph} object}

\item{...}{Arguments based to \code{\link[dplyr:summarise]{dplyr::summarise()}}}
}
\value{
A \code{clustree_graph} object
}
\description{
Tidyverse style function for summarising sample metadata by node or edge for
a \code{clustree_graph} object.
}
\details{
\code{summarise_metadata} and \code{summarize_metadata} are synonyms.

This function is designed to make it easy to add additional summarised
information to nodes or edges in as flexible a way as possible. It uses the
following steps:
\enumerate{
\item Extract nodes/edges (whichever are active) as a \code{tibble} using
\code{\link[tibble:as_tibble]{tibble::as_tibble()}}
\item Unnest the "\code{.clustree_indices}" column using \code{\link[tidyr:nest]{tidyr::unnest()}}
\item Join the metadata table by the indices using \code{\link[dplyr:mutate-joins]{dplyr::left_join()}}
\item Calculated summaries using \code{\link[dplyr:summarise]{dplyr::summarise()}}
\item Join the results to the original nodes/edges using \code{\link[dplyr:mutate-joins]{dplyr::left_join()}}
}
}
\examples{
graph <- build_clustree_graph(nba_clusts, patter = "K(.*)")

# Summarise by node
graph <- tidygraph::activate(graph, "nodes")
summarise_metadata(graph, MeanReboundPct = mean(ReboundPct))

# Summarise by edge
graph <- tidygraph::activate(graph, "edges")
summarise_metadata(graph, MeanReboundPct = mean(ReboundPct))
}
\seealso{
\code{\link[dplyr:summarise]{dplyr::summarise()}} for details on summarisation and \code{\link[=clustree_graph]{clustree_graph()}} for \code{clustree_graph} objects
}
