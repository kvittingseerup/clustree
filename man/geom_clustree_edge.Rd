% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geoms.R
\name{geom_clustree_edge}
\alias{geom_clustree_edge}
\title{Clustree edges}
\usage{
geom_clustree_edge(
  mapping = NULL,
  data = ggraph::get_edges("short"),
  position = "identity",
  arrow = grid::arrow(),
  n = 100,
  lineend = "butt",
  linejoin = "round",
  linemitre = 1,
  label_colour = "black",
  label_alpha = 1,
  label_parse = FALSE,
  check_overlap = FALSE,
  angle_calc = "rot",
  force_flip = TRUE,
  label_dodge = NULL,
  label_push = NULL,
  show.legend = NA,
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{ggplot2::aes()}}
or \code{\link[ggplot2:aes_]{ggplot2::aes_()}}. By default x, y, xend, yend, group and
circular are mapped to x, y, xend, yend, edge.id and circular in the edge
data.}

\item{data}{The return of a call to \code{get_edges()} or a data.frame
giving edges in correct format (see details for for guidance on the format).
See \code{\link[ggraph:get_edges]{get_edges()}} for more details on edge extraction.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{arrow}{Arrow specification, as created by \code{\link[grid:arrow]{grid::arrow()}}.}

\item{n}{The number of points to create along the path.}

\item{lineend}{Line end style (round, butt, square).}

\item{linejoin}{Line join style (round, mitre, bevel).}

\item{linemitre}{Line mitre limit (number greater than 1).}

\item{label_colour}{The colour of the edge label. If \code{NA} it will use
the colour of the edge.}

\item{label_alpha}{The opacity of the edge label. If \code{NA} it will use
the opacity of the edge.}

\item{label_parse}{If \code{TRUE}, the labels will be parsed into expressions
and displayed as described in \code{\link[grDevices:plotmath]{grDevices::plotmath()}}.}

\item{check_overlap}{If \code{TRUE}, text that overlaps previous text in the
same layer will not be plotted. \code{check_overlap} happens at draw time and in
the order of the data. Therefore data should be arranged by the label
column before calling \code{geom_label()} or \code{geom_text()}.}

\item{angle_calc}{Either 'none', 'along', or 'across'. If 'none' the label will
use the angle aesthetic of the geom. If 'along' The label will be written
along the edge direction. If 'across' the label will be written across the
edge direction.}

\item{force_flip}{Logical. If \code{angle_calc} is either 'along' or 'across'
should the label be flipped if it is on it's head. Default to \code{TRUE}.}

\item{label_dodge}{A \code{\link[grid:unit]{grid::unit()}} giving a fixed vertical shift
to add to the label in case of \code{angle_calc} is either 'along' or 'across'}

\item{label_push}{A \code{\link[grid:unit]{grid::unit()}} giving a fixed horizontal shift
to add to the label in case of \code{angle_calc} is either 'along' or 'across'}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}
}
\description{
The clustree edges geom is used to add lines representing edges in a
graph to a clustering tree plot. It is equivalent to
\code{\link[ggraph:geom_edge_link]{ggraph::geom_edge_link()}} but sets some default aesthetics.
}
\section{Aesthetics}{

\code{geom_clustree_edge} understands the following aesthetics. Bold aesthetics
are automatically set, but can be overridden.
\itemize{
\item \strong{x}
\item \strong{y}
\item \strong{xend}
\item \strong{yend}
\item \strong{edge_colour = count}
\item \strong{edge_width = 1.5}
\item edge_linetype
\item \strong{edge_alpha = in_prop}
\item filter
\item start_cap
\item \strong{end_cap = ggraph::circle(15.5, "points")}
\item label
\item label_pos
\item label_size
\item angle
\item hjust
\item vjust
\item family
\item fontface
\item lineheight
}
}

\examples{
graph <- build_clustree_graph(nba_clusts, pattern = "K(.*)")
plot_clustree(graph) +
    geom_clustree_edge()
}
\seealso{
\code{\link[=plot_clustree]{plot_clustree()}} for creating the plot object and
\code{\link[=geom_clustree_point]{geom_clustree_point()}} and \code{\link[=geom_clustree_text]{geom_clustree_text()}} for other clustering tree
geoms. See \code{\link[ggraph:geom_edge_link]{ggraph::geom_edge_link()}} for details on the underlying geom.
}
